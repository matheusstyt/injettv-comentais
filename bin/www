#!/usr/bin/env node

require('dotenv').config({path:__dirname+'/.env'});

const app = require('../app'),
    debug = require('debug')('injettv:server'),
    http = require('http'),
    port = normalizePort(process.env.PORT || '3000');

app.set('port', port);

const server = http.createServer(app);

server
.listen(port)
.on('error', onError)
.on('listening', onListening);

function normalizePort(val) {
    let port = parseInt(val, 10);

    if (isNaN(port)) return val;

    if (port >= 0) return port;

    return false;
}

function onError(error) {
    if (error.syscall !== 'listen') throw error;

    let bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;

    switch (error.code) {
        case 'EACCES':
           console.error(bind + ' requires elevated privileges');
            process.exit(1);
        break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
        break;
        default: throw error;
    }
}

function onListening() {
    let addr = server.address(),
        bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
    debug('Listening on ' + bind);
}